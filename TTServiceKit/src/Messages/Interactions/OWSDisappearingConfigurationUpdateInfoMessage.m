//
//  Copyright (c) 2018 Open Whisper Systems. All rights reserved.
//

#import "OWSDisappearingConfigurationUpdateInfoMessage.h"
#import "NSString+SSK.h"
#import "OWSDisappearingMessagesConfiguration.h"
#import <TTServiceKit/TTServiceKit-Swift.h>

NS_ASSUME_NONNULL_BEGIN
extern const NSTimeInterval kDayInterval;
@interface OWSDisappearingConfigurationUpdateInfoMessage ()

//@property (nonatomic, readonly, nullable) NSString *createdByRemoteName;
//@property (nonatomic, readonly) BOOL createdInExistingGroup;

@end

@implementation OWSDisappearingConfigurationUpdateInfoMessage

// --- CODE GENERATION MARKER

// This snippet is generated by /Scripts/sds_codegen/sds_generate.py. Do not manually edit it, instead run `sds_codegen.sh`. Please contact Kris for support.

// clang-format off

- (instancetype)initWithGrdbId:(int64_t)grdbId
                      uniqueId:(NSString *)uniqueId
        associatedUniqueThreadId:(NSString *)associatedUniqueThreadId
                notifySequenceId:(uint64_t)notifySequenceId
             receivedAtTimestamp:(uint64_t)receivedAtTimestamp
                      sequenceId:(uint64_t)sequenceId
                 serverTimestamp:(uint64_t)serverTimestamp
                       timestamp:(uint64_t)timestamp
                  uniqueThreadId:(NSString *)uniqueThreadId
                       atPersons:(nullable NSString *)atPersons
                   attachmentIds:(NSArray<NSString *> *)attachmentIds
                            body:(nullable NSString *)body
                            card:(nullable DTCardMessageEntity *)card
                    cardUniqueId:(nullable NSString *)cardUniqueId
                     cardVersion:(unsigned int)cardVersion
       combinedForwardingMessage:(nullable DTCombinedForwardingMessage *)combinedForwardingMessage
                    contactShare:(nullable OWSContact *)contactShare
                        editable:(BOOL)editable
                   envelopSource:(nullable NSString *)envelopSource
                 expireStartedAt:(uint64_t)expireStartedAt
                       expiresAt:(uint64_t)expiresAt
                expiresInSeconds:(unsigned int)expiresInSeconds
                 isPinnedMessage:(BOOL)isPinnedMessage
                        mentions:(nullable NSArray<DTMention *> *)mentions
                 messageModeType:(TSMessageModeType)messageModeType
                           pinId:(nullable NSString *)pinId
                   quotedMessage:(nullable TSQuotedMessage *)quotedMessage
                     reactionMap:(nullable NSDictionary<NSString *,NSArray<DTReactionSource *> *> *)reactionMap
                 reactionMessage:(nullable DTReactionMessage *)reactionMessage
                          recall:(nullable DTRecallMessage *)recall
    storedShouldStartExpireTimer:(BOOL)storedShouldStartExpireTimer
                translateMessage:(nullable DTTranslateMessage *)translateMessage
              whisperMessageType:(TSWhisperMessageType)whisperMessageType
                        authorId:(NSString *)authorId
         customAttributedMessage:(nullable NSAttributedString *)customAttributedMessage
                   customMessage:(nullable NSString *)customMessage
                      inviteCode:(NSString *)inviteCode
                meetingDetailUrl:(nullable NSString *)meetingDetailUrl
                     meetingName:(nullable NSString *)meetingName
             meetingReminderType:(DTMeetingReminderType)meetingReminderType
                     messageType:(TSInfoMessageType)messageType
                            read:(BOOL)read
                      realSource:(nullable DTRealSourceEntity *)realSource
                   recallPreview:(NSString *)recallPreview
       shouldAffectThreadSorting:(BOOL)shouldAffectThreadSorting
                  sourceDeviceId:(unsigned int)sourceDeviceId
         unregisteredRecipientId:(nullable NSString *)unregisteredRecipientId
    configurationDurationSeconds:(unsigned int)configurationDurationSeconds
{
    self = [super initWithGrdbId:grdbId
                        uniqueId:uniqueId
          associatedUniqueThreadId:associatedUniqueThreadId
                  notifySequenceId:notifySequenceId
               receivedAtTimestamp:receivedAtTimestamp
                        sequenceId:sequenceId
                   serverTimestamp:serverTimestamp
                         timestamp:timestamp
                    uniqueThreadId:uniqueThreadId
                         atPersons:atPersons
                     attachmentIds:attachmentIds
                              body:body
                              card:card
                      cardUniqueId:cardUniqueId
                       cardVersion:cardVersion
         combinedForwardingMessage:combinedForwardingMessage
                      contactShare:contactShare
                          editable:editable
                     envelopSource:envelopSource
                   expireStartedAt:expireStartedAt
                         expiresAt:expiresAt
                  expiresInSeconds:expiresInSeconds
                   isPinnedMessage:isPinnedMessage
                          mentions:mentions
                   messageModeType:messageModeType
                             pinId:pinId
                     quotedMessage:quotedMessage
                       reactionMap:reactionMap
                   reactionMessage:reactionMessage
                            recall:recall
      storedShouldStartExpireTimer:storedShouldStartExpireTimer
                  translateMessage:translateMessage
                whisperMessageType:whisperMessageType
                          authorId:authorId
           customAttributedMessage:customAttributedMessage
                     customMessage:customMessage
                        inviteCode:inviteCode
                  meetingDetailUrl:meetingDetailUrl
                       meetingName:meetingName
               meetingReminderType:meetingReminderType
                       messageType:messageType
                              read:read
                        realSource:realSource
                     recallPreview:recallPreview
         shouldAffectThreadSorting:shouldAffectThreadSorting
                    sourceDeviceId:sourceDeviceId
           unregisteredRecipientId:unregisteredRecipientId];

    if (!self) {
        return self;
    }

    _configurationDurationSeconds = configurationDurationSeconds;

    return self;
}

// clang-format on

// --- CODE GENERATION MARKER

- (instancetype)initWithTimestamp:(uint64_t)timestamp
                           thread:(TSThread *)thread
                    messageExpiry:(uint32_t)messageExpiry
              createdByRemoteName:(nullable NSString *)remoteName
           createdInExistingGroup:(BOOL)createdInExistingGroup
{
    self = [super initWithTimestamp:timestamp inThread:thread messageType:TSInfoMessageTypeDisappearingMessagesUpdate];
    if (!self) {
        return self;
    }

//    _configurationIsEnabled = YES;
    _configurationDurationSeconds = messageExpiry;

    // At most one should be set
    OWSAssertDebug(!remoteName || !createdInExistingGroup);

//    _createdByRemoteName = remoteName;
//    _createdInExistingGroup = createdInExistingGroup;

    return self;
}

- (instancetype)initWithTimestamp:(uint64_t)timestamp
                           thread:(TSThread *)thread
                    configuration:(OWSDisappearingMessagesConfiguration *)configuration
              createdByRemoteName:(nullable NSString *)remoteName
           createdInExistingGroup:(BOOL)createdInExistingGroup{
    
    self = [super initWithTimestamp:timestamp inThread:thread messageType:TSInfoMessageTypeDisappearingMessagesUpdate];
    if (!self) {
        return self;
    }

//    _configurationIsEnabled = configuration.enabled;
    _configurationDurationSeconds = configuration.durationSeconds;

    // At most one should be set
    OWSAssertDebug(!remoteName || !createdInExistingGroup);

//    _createdByRemoteName = remoteName;
//    _createdInExistingGroup = createdInExistingGroup;

    return self;
}

- (BOOL)shouldUseReceiptDateForSorting
{
    // Use the timestamp, not the "received at" timestamp to sort,
    // since we're creating these interactions after the fact and back-dating them.
    return NO;
}

-(NSString *)previewTextWithTransaction:(SDSAnyReadTransaction *)transaction
{
    if (self.configurationDurationSeconds > 0) {
        NSString *infoFormat = nil;
        int minuteNum = (int)(self.configurationDurationSeconds / kMinuteInterval);
        int hourNum = (int)(self.configurationDurationSeconds / kHourInterval);
        int dayNum = (int)(self.configurationDurationSeconds / kDayInterval);
        
        if(minuteNum > 0 && hourNum == 0){
            if ( minuteNum > 1) {
                infoFormat = Localized(@"YOU_UPDATED_DISAPPEARING_MESSAGES_CONFIGURATION_MINUTES",
                    @"Info message embedding a {{time amount}}, see the *_TIME_AMOUNT strings for context.");
            } else {
                infoFormat = Localized(@"YOU_UPDATED_DISAPPEARING_MESSAGES_CONFIGURATION_MINUTE",
                    @"Info message embedding a {{time amount}}, see the *_TIME_AMOUNT strings for context.");
            }
            
            return [NSString stringWithFormat:infoFormat, minuteNum];
        } else {
            if(dayNum == 0  && hourNum > 0){
                if ( hourNum > 1) {
                    infoFormat = Localized(@"YOU_UPDATED_DISAPPEARING_MESSAGES_CONFIGURATION_HOURS",
                        @"Info message embedding a {{time amount}}, see the *_TIME_AMOUNT strings for context.");
                } else {
                    infoFormat = Localized(@"YOU_UPDATED_DISAPPEARING_MESSAGES_CONFIGURATION_HOUR",
                        @"Info message embedding a {{time amount}}, see the *_TIME_AMOUNT strings for context.");
                }
                
                return [NSString stringWithFormat:infoFormat, hourNum];
            } else {
                if ( dayNum > 1) {
                    infoFormat = Localized(@"YOU_UPDATED_DISAPPEARING_MESSAGES_CONFIGURATION_DAYS",
                        @"Info message embedding a {{time amount}}, see the *_TIME_AMOUNT strings for context.");
                } else {
                    infoFormat = Localized(@"YOU_UPDATED_DISAPPEARING_MESSAGES_CONFIGURATION",
                        @"Info message embedding a {{time amount}}, see the *_TIME_AMOUNT strings for context.");
                }
                return [NSString stringWithFormat:infoFormat, dayNum];
            }
        }
    }

    return @"";
}

- (BOOL)isNeedUnreadIndicator {
    return false;
}

@end

NS_ASSUME_NONNULL_END
