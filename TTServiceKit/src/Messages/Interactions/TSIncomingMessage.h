//
//  Copyright (c) 2018 Open Whisper Systems. All rights reserved.
//

#import "OWSReadTracking.h"
#import "TSMessage.h"

NS_ASSUME_NONNULL_BEGIN

@class TSContactThread;
@class TSGroupThread;

typedef NS_ENUM(NSInteger, OWSMentionedMsgType) {
    OWSMentionedMsgTypeNone,
    OWSMentionedMsgTypeOthers,
    OWSMentionedMsgTypeAll,
    OWSMentionedMsgTypeMe
};

@interface TSIncomingMessage : TSMessage <OWSReadTracking>

// --- CODE GENERATION MARKER

// This snippet is generated by /Scripts/sds_codegen/sds_generate.py. Do not manually edit it, instead run `sds_codegen.sh`. Please contact Kris for support.

// clang-format off

- (instancetype)initWithGrdbId:(int64_t)grdbId
                      uniqueId:(NSString *)uniqueId
        associatedUniqueThreadId:(NSString *)associatedUniqueThreadId
                notifySequenceId:(uint64_t)notifySequenceId
             receivedAtTimestamp:(uint64_t)receivedAtTimestamp
                      sequenceId:(uint64_t)sequenceId
                 serverTimestamp:(uint64_t)serverTimestamp
                       timestamp:(uint64_t)timestamp
                  uniqueThreadId:(NSString *)uniqueThreadId
                       atPersons:(nullable NSString *)atPersons
                   attachmentIds:(NSArray<NSString *> *)attachmentIds
                            body:(nullable NSString *)body
                            card:(nullable DTCardMessageEntity *)card
                    cardUniqueId:(nullable NSString *)cardUniqueId
                     cardVersion:(unsigned int)cardVersion
       combinedForwardingMessage:(nullable DTCombinedForwardingMessage *)combinedForwardingMessage
                    contactShare:(nullable OWSContact *)contactShare
                        editable:(BOOL)editable
                   envelopSource:(nullable NSString *)envelopSource
                 expireStartedAt:(uint64_t)expireStartedAt
                       expiresAt:(uint64_t)expiresAt
                expiresInSeconds:(unsigned int)expiresInSeconds
                 isPinnedMessage:(BOOL)isPinnedMessage
                        mentions:(nullable NSArray<DTMention *> *)mentions
                 messageModeType:(TSMessageModeType)messageModeType
                           pinId:(nullable NSString *)pinId
                   quotedMessage:(nullable TSQuotedMessage *)quotedMessage
                     reactionMap:(nullable NSDictionary<NSString *,NSArray<DTReactionSource *> *> *)reactionMap
                 reactionMessage:(nullable DTReactionMessage *)reactionMessage
                          recall:(nullable DTRecallMessage *)recall
    storedShouldStartExpireTimer:(BOOL)storedShouldStartExpireTimer
                translateMessage:(nullable DTTranslateMessage *)translateMessage
              whisperMessageType:(TSWhisperMessageType)whisperMessageType
                        authorId:(NSString *)authorId
                mentionedMsgType:(OWSMentionedMsgType)mentionedMsgType
                            read:(BOOL)read
                  sourceDeviceId:(unsigned int)sourceDeviceId
NS_DESIGNATED_INITIALIZER NS_SWIFT_NAME(init(grdbId:uniqueId:associatedUniqueThreadId:notifySequenceId:receivedAtTimestamp:sequenceId:serverTimestamp:timestamp:uniqueThreadId:atPersons:attachmentIds:body:card:cardUniqueId:cardVersion:combinedForwardingMessage:contactShare:editable:envelopSource:expireStartedAt:expiresAt:expiresInSeconds:isPinnedMessage:mentions:messageModeType:pinId:quotedMessage:reactionMap:reactionMessage:recall:storedShouldStartExpireTimer:translateMessage:whisperMessageType:authorId:mentionedMsgType:read:sourceDeviceId:));

// clang-format on

// --- CODE GENERATION MARKER

- (instancetype)initMessageWithTimestamp:(uint64_t)timestamp
                                inThread:(nullable TSThread *)thread
                             messageBody:(nullable NSString *)body
                               atPersons:(nullable NSString *)atPersons
                                mentions:(nullable NSArray <DTMention *> *)mentions
                           attachmentIds:(NSArray<NSString *> *)attachmentIds
                        expiresInSeconds:(uint32_t)expiresInSeconds
                         expireStartedAt:(uint64_t)expireStartedAt
                           quotedMessage:(nullable TSQuotedMessage *)quotedMessage
                            contactShare:(nullable OWSContact *)contactShare NS_UNAVAILABLE;

/**
 *  Inits an incoming group message that expires.
 *
 *  @param timestamp
 *    When the message was created in milliseconds since epoch
 *  @param thread
 *    Thread to which the message belongs
 *  @param authorId
 *    Signal ID (i.e. e164) of the user who sent the message
 *  @param sourceDeviceId
 *    Numeric ID of the device used to send the message. Used to detect duplicate messages.
 *  @param body
 *    Body of the message
 *  @param attachmentIds
 *    The uniqueIds for the message's attachments, possibly an empty list.
 *  @param expiresInSeconds
 *    Seconds from when the message is read until it is deleted.
 *  @param quotedMessage
 *    If this message is a quoted reply to another message, contains data about that message.
 *
 *  @return initiated incoming group message
 */
- (instancetype)initIncomingMessageWithTimestamp:(uint64_t)timestamp
                                 serverTimestamp:(uint64_t)serverTimestamp
                                      sequenceId:(uint64_t)sequenceId
                                notifySequenceId:(uint64_t)notifySequenceId
                                        inThread:(nullable TSThread *)thread
                                        authorId:(NSString *)authorId
                                  sourceDeviceId:(uint32_t)sourceDeviceId
                                     messageBody:(nullable NSString *)body
                                       atPersons:(nullable NSString *)atPersons
                                        mentions:(nullable NSArray <DTMention *> *)mentions
                                   attachmentIds:(NSArray<NSString *> *)attachmentIds
                                expiresInSeconds:(uint32_t)expiresInSeconds
                                   quotedMessage:(nullable TSQuotedMessage *)quotedMessage
                                forwardingMessage:(nullable DTCombinedForwardingMessage *)forwardingMessage
                                    contactShare:(nullable OWSContact *)contactShare NS_DESIGNATED_INITIALIZER;

- (instancetype)initWithCoder:(NSCoder *)coder NS_DESIGNATED_INITIALIZER;

/*
 * Find a message matching the senderId and timestamp, if any.
 *
 * @param authorId
 *   Signal ID (i.e. e164) of the user who sent the message
 * @params timestamp
 *   When the message was created in milliseconds since epoch
 *
 */
+ (nullable instancetype)findMessageWithAuthorId:(NSString *)authorId
                                        deviceId:(UInt32)deviceId
                                       timestamp:(uint64_t)timestamp
                                     transaction:(SDSAnyWriteTransaction *)transaction;

// This will be 0 for messages created before we were tracking sourceDeviceId
@property (nonatomic, readonly) UInt32 sourceDeviceId;

// NOTE: Use messageAuthorId instead wherever possible.
@property (nonatomic, readonly) NSString *authorId;

@property (nonatomic, assign) OWSMentionedMsgType mentionedMsgType;

- (NSString *)messageAuthorId;

@end

NS_ASSUME_NONNULL_END
