//
//  Copyright (c) 2018 Open Whisper Systems. All rights reserved.
//

#import "BaseModel.h"

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, TSAttachmentType) {
    TSAttachmentTypeDefault = 0,
    TSAttachmentTypeVoiceMessage = 1,
};

@class DSKProtoAttachmentPointer;

@interface TSAttachment : BaseModel {

@protected
    NSString *_contentType;
}

// TSAttachment is a base class for TSAttachmentPointer (a yet-to-be-downloaded
// incoming attachment) and TSAttachmentStream (an outgoing or already-downloaded
// incoming attachment).
//
// The attachmentSchemaVersion and serverId properties only apply to
// TSAttachmentPointer, which can be distinguished by the isDownloaded
// property.
@property (atomic, readwrite) UInt64 serverId;
@property (atomic, readwrite) NSData *encryptionKey;
@property (nonatomic, readonly) NSString *contentType;
@property (atomic, readwrite) BOOL isDownloaded;
@property (nonatomic) TSAttachmentType attachmentType;

// Though now required, may incorrectly be 0 on legacy attachments.
@property (nonatomic, readonly) UInt32 byteCount;

// Represents the "source" filename sent or received in the protos,
// not the filename on disk.
@property (nonatomic, readonly, nullable) NSString *sourceFilename;

// add by kris:媒体预览相关 头像无此属性
// message id
@property (nonatomic, nullable) NSString *albumMessageId;
// conversation id
@property (nonatomic, nullable) NSString *albumId;
@property (nonatomic, assign) BOOL appearInMediaGallery;

// --- CODE GENERATION MARKER

// This snippet is generated by /Scripts/sds_codegen/sds_generate.py. Do not manually edit it, instead run `sds_codegen.sh`. Please contact Kris for support.

// clang-format off

- (instancetype)initWithGrdbId:(int64_t)grdbId
                      uniqueId:(NSString *)uniqueId
                         albumId:(nullable NSString *)albumId
                  albumMessageId:(nullable NSString *)albumMessageId
            appearInMediaGallery:(BOOL)appearInMediaGallery
         attachmentSchemaVersion:(NSUInteger)attachmentSchemaVersion
                  attachmentType:(TSAttachmentType)attachmentType
                       byteCount:(unsigned int)byteCount
                     contentType:(NSString *)contentType
                   encryptionKey:(NSData *)encryptionKey
                    isDownloaded:(BOOL)isDownloaded
                        serverId:(unsigned long long)serverId
                  sourceFilename:(nullable NSString *)sourceFilename
NS_DESIGNATED_INITIALIZER NS_SWIFT_NAME(init(grdbId:uniqueId:albumId:albumMessageId:appearInMediaGallery:attachmentSchemaVersion:attachmentType:byteCount:contentType:encryptionKey:isDownloaded:serverId:sourceFilename:));

// clang-format on

// --- CODE GENERATION MARKER

// This constructor is used for new instances of TSAttachmentPointer,
// i.e. undownloaded incoming attachments.
- (instancetype)initWithServerId:(UInt64)serverId
                   encryptionKey:(NSData *)encryptionKey
                       byteCount:(UInt32)byteCount
                     contentType:(NSString *)contentType
                  sourceFilename:(nullable NSString *)sourceFilename
                  albumMessageId:(nullable NSString *)albumMessageId
                         albumId:(nullable NSString *)albumId;

// This constructor is used for new instances of TSAttachmentStream
// that represent new, un-uploaded outgoing attachments.
- (instancetype)initWithContentType:(NSString *)contentType
                          byteCount:(UInt32)byteCount
                     sourceFilename:(nullable NSString *)sourceFilename
                     albumMessageId:(nullable NSString *)albumMessageId
                            albumId:(nullable NSString *)albumId;

// This constructor is used for new instances of TSAttachmentStream
// that represent downloaded incoming attachments.
- (instancetype)initWithPointer:(TSAttachment *)pointer albumMessageId:(nullable NSString *)albumMessageId albumId:(nullable NSString *)albumId;

- (nullable instancetype)initWithCoder:(NSCoder *)coder;

- (void)upgradeFromAttachmentSchemaVersion:(NSUInteger)attachmentSchemaVersion;

- (BOOL)isVoiceMessage;

+ (NSString *)emojiForMimeType:(NSString *)contentType;

+ (BOOL)hasFileSource:(nullable NSString *)fileName;

- (nullable DSKProtoAttachmentPointer *)buildProto;

@end

NS_ASSUME_NONNULL_END
