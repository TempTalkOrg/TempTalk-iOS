//
//  DTGroupBaseInfoEntity.m
//  TTServiceKit
//
//  Created by Kris.s on 2021/9/26.
//

#import "DTGroupBaseInfoEntity.h"

@implementation DTGroupBaseInfoEntity

// --- CODE GENERATION MARKER

// This snippet is generated by /Scripts/sds_codegen/sds_generate.py. Do not manually edit it, instead run `sds_codegen.sh`. Please contact Kris for support.

// clang-format off

- (instancetype)initWithGrdbId:(int64_t)grdbId
                      uniqueId:(NSString *)uniqueId
                    anyoneRemove:(BOOL)anyoneRemove
                          avatar:(NSString *)avatar
                             ext:(BOOL)ext
                             gid:(NSString *)gid
                  invitationRule:(nullable NSNumber *)invitationRule
              messageClearAnchor:(unsigned long long)messageClearAnchor
                   messageExpiry:(nullable NSNumber *)messageExpiry
                            name:(NSString *)name
                     publishRule:(nullable NSNumber *)publishRule
                          rejoin:(BOOL)rejoin
                     remindCycle:(NSString *)remindCycle
{
    self = [super initWithGrdbId:grdbId
                        uniqueId:uniqueId];

    if (!self) {
        return self;
    }

    _anyoneRemove = anyoneRemove;
    _avatar = avatar;
    _ext = ext;
    _gid = gid;
    _invitationRule = invitationRule;
    _messageClearAnchor = messageClearAnchor;
    _messageExpiry = messageExpiry;
    _name = name;
    _publishRule = publishRule;
    _rejoin = rejoin;
    _remindCycle = remindCycle;

    return self;
}

// clang-format on

// --- CODE GENERATION MARKER

+ (NSDictionary *)JSONKeyPathsByPropertyKey{
    return [NSDictionary mtl_identityPropertyMapWithModel:[self class]];
}

- (void)anyUpdateGroupBaseInfoEntity {
    if(self.gid.length){
        self.uniqueId = self.gid;
    }
    if(!self.uniqueId.length){
        NSString *errorString = [NSString stringWithFormat:@"DTGroupBaseInfoEntity invalid uniqueId group name: %@",self.name];
        OWSProdError(errorString);
    }
}

- (void)anyWillUpdateWithTransaction:(SDSAnyWriteTransaction *)transaction {
    
    [self anyUpdateGroupBaseInfoEntity];
    
    [super anyWillUpdateWithTransaction:transaction];
}

- (void)anyWillInsertWithTransaction:(SDSAnyWriteTransaction *)transaction {
    
    [self anyUpdateGroupBaseInfoEntity];
    
    [super anyWillInsertWithTransaction:transaction];
}

@end
